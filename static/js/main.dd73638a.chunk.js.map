{"version":3,"sources":["components/TodoApp.js","components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","todos.js","App.js","index.js"],"names":["TodoApp","state","title","handleInputChange","event","setState","target","value","handleReset","handleSubmit","preventDefault","props","addNewTodo","todos","trim","id","length","completed","this","className","onSubmit","placeholder","onChange","React","Component","TodoItem","titleInList","toggleComplete","removeTodo","cn","type","checked","htmlFor","onClick","TodoList","selectAll","toggleSelectAll","map","todo","index","key","TodosFilters","href","App","prevState","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd73638a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoApp extends React.Component {\n  state ={\n    title: '',\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleReset = () => {\n    this.setState({\n      title: '',\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addNewTodo, todos } = this.props;\n    const { title } = this.state;\n\n    if (!title.trim()) {\n      this.setState({\n        title: '',\n      });\n\n      return;\n    }\n\n    const newTodo = {\n      title,\n      id: todos.length + 1,\n      completed: false,\n    };\n\n    addNewTodo(newTodo);\n\n    this.handleReset();\n  }\n\n  // toggleSelectAll = () => {\n  //   this.setState(() => ({\n  //     todos: todos.map(todo => ({\n  //       ...todo,\n\n  //     }))\n  //   }));\n  // }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  // id: PropTypes.number.isRequired,\n  addNewTodo: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends React.Component {\n  state= {\n    titleInList: this.props.title,\n  }\n\n  render() {\n    const { title, id, completed, toggleComplete, removeTodo } = this.props;\n    const { titleInList } = this.state;\n\n    return (\n      <li className={cn({ completed })}>\n        <form>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={`todo-${id}`}\n              checked={completed}\n              onChange={() => toggleComplete(id)}\n            />\n            <label\n              htmlFor={id}\n            >\n              {title}\n              {id}\n            </label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => removeTodo(id)}\n            />\n          </div>\n          <input\n            type=\"text\"\n            className=\"edit\"\n            value={titleInList}\n          />\n        </form>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({\n  todos,\n  selectAll,\n  toggleComplete,\n  removeTodo,\n  toggleSelectAll,\n}) => (\n\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={selectAll}\n      onChange={() => toggleSelectAll(selectAll)}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todos.map((todo, index) => (\n        <TodoItem\n          key={todo.id}\n          {...todo}\n          toggleComplete={toggleComplete}\n          removeTodo={removeTodo}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n  toggleSelectAll: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nexport class TodosFilters extends React.Component {\n  state ={}\n\n  render() {\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          3 items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n","const todos = [\n  {\n    title: 'task my task',\n    id: 1,\n    completed: false,\n  },\n  {\n    title: 'what do you need',\n    id: 2,\n    completed: false,\n  },\n  {\n    title: 'for world peace',\n    id: 3,\n    completed: true,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilters } from './components/TodosFilter';\nimport todos from './todos';\n\nclass App extends React.Component {\n  state = {\n    todos: [...todos],\n    selectAll: false,\n  }\n\n  addNewTodo = (todo) => {\n    this.setState(state => ({\n      todos: [...state.todos, todo],\n    }));\n  };\n\n  toggleComplete = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  removeTodo = (id) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].filter(todo => id !== todo.id),\n    }));\n  }\n\n  toggleSelectAll = (selectAll) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: !selectAll,\n      })),\n      selectAll: !selectAll,\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          addNewTodo={this.addNewTodo}\n          todos={this.state.todos}\n        />\n        <TodoList\n          todos={this.state.todos}\n          selectAll={this.state.selectAll}\n          toggleComplete={this.toggleComplete}\n          removeTodo={this.removeTodo}\n          toggleSelectAll={this.toggleSelectAll}\n        />\n        <TodosFilters />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}